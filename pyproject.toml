[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hatch-docstring-description"
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">=3.9"
license = "GPL-3.0-or-later"
authors = [
  { name = "Philipp A.", email = "flying-sheep@web.de" },
]
# urls.Documentation = "https://github.com/flying-sheep/hatch-docstring-description#readme"
urls.Issues = "https://github.com/flying-sheep/hatch-docstring-description/issues"
urls.Source = "https://github.com/flying-sheep/hatch-docstring-description"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Framework :: Hatch",
]
dependencies = ["hatchling"]

[project.entry-points.hatch]
aws = "hatch_docstring_description.hooks"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage xml",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow dict() syntax
  "C408",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
]

[tool.ruff.isort]
known-first-party = ["hatch_docstring_description"]

[tool.ruff.per-file-ignores]
"tests/**/*" = [
  "ARG001", # fixtures can look like unused parameters
  "S101", # tests can use magic values
]

[tool.coverage.run]
source_pkgs = ["hatch_docstring_description"]
branch = true
parallel = true
data_file = ".cache/coverage"

[tool.coverage.xml]
output = ".cache/coverage.xml"

[tool.coverage.paths]
hatch_docstring_description = ["src/hatch_docstring_description"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
